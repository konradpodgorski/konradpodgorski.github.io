<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Konrad Podgórski - Web Developer]]></title>
  <link href="http://konradpodgorski.com/atom.xml" rel="self"/>
  <link href="http://konradpodgorski.com/"/>
  <updated>2013-10-21T00:23:27+02:00</updated>
  <id>http://konradpodgorski.com/</id>
  <author>
    <name><![CDATA[Konrad Podgórski]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[How to recursively download an entire website using WGET]]></title>
    <link href="http://konradpodgorski.com/blog/2013/10/20/how-to-recursively-download-an-entire-website-using-wget/"/>
    <updated>2013-10-20T18:54:00+02:00</updated>
    <id>http://konradpodgorski.com/blog/2013/10/20/how-to-recursively-download-an-entire-website-using-wget</id>
    <content type="html"><![CDATA[<p>Wget snippet to recursively download an entire website using WGET</p>

<pre><code>wget http://example.com \
 --domains example.com \
 --recursive \
 --page-requisites \
 --no-clobber \
 --html-extension \
 --convert-links
</code></pre>

<!-- more -->


<p>Dump from wget &mdash;help for further reference</p>

<pre><code>Usage: wget [OPTION]... [URL]...

Mandatory arguments to long options are mandatory for short options too.

Startup:
  -V,  --version           display the version of Wget and exit.
  -h,  --help              print this help.
  -b,  --background        go to background after startup.
  -e,  --execute=COMMAND   execute a `.wgetrc'-style command.

Logging and input file:
  -o,  --output-file=FILE    log messages to FILE.
  -a,  --append-output=FILE  append messages to FILE.
  -d,  --debug               print lots of debugging information.
  -q,  --quiet               quiet (no output).
  -v,  --verbose             be verbose (this is the default).
  -nv, --no-verbose          turn off verboseness, without being quiet.
       --report-speed=TYPE   Output bandwidth as TYPE.  TYPE can be bits.
  -i,  --input-file=FILE     download URLs found in local or external FILE.
  -F,  --force-html          treat input file as HTML.
  -B,  --base=URL            resolves HTML input-file links (-i -F)
                             relative to URL.
       --config=FILE         Specify config file to use.

Download:
  -t,  --tries=NUMBER            set number of retries to NUMBER (0 unlimits).
       --retry-connrefused       retry even if connection is refused.
  -O,  --output-document=FILE    write documents to FILE.
  -nc, --no-clobber              skip downloads that would download to
                                 existing files (overwriting them).
  -c,  --continue                resume getting a partially-downloaded file.
       --progress=TYPE           select progress gauge type.
  -N,  --timestamping            don't re-retrieve files unless newer than
                                 local.
  --no-use-server-timestamps     don't set the local file's timestamp by
                                 the one on the server.
  -S,  --server-response         print server response.
       --spider                  don't download anything.
  -T,  --timeout=SECONDS         set all timeout values to SECONDS.
       --dns-timeout=SECS        set the DNS lookup timeout to SECS.
       --connect-timeout=SECS    set the connect timeout to SECS.
       --read-timeout=SECS       set the read timeout to SECS.
  -w,  --wait=SECONDS            wait SECONDS between retrievals.
       --waitretry=SECONDS       wait 1..SECONDS between retries of a retrieval.
       --random-wait             wait from 0.5*WAIT...1.5*WAIT secs between retrievals.
       --no-proxy                explicitly turn off proxy.
  -Q,  --quota=NUMBER            set retrieval quota to NUMBER.
       --bind-address=ADDRESS    bind to ADDRESS (hostname or IP) on local host.
       --limit-rate=RATE         limit download rate to RATE.
       --no-dns-cache            disable caching DNS lookups.
       --restrict-file-names=OS  restrict chars in file names to ones OS allows.
       --ignore-case             ignore case when matching files/directories.
  -4,  --inet4-only              connect only to IPv4 addresses.
  -6,  --inet6-only              connect only to IPv6 addresses.
       --prefer-family=FAMILY    connect first to addresses of specified family,
                                 one of IPv6, IPv4, or none.
       --user=USER               set both ftp and http user to USER.
       --password=PASS           set both ftp and http password to PASS.
       --ask-password            prompt for passwords.
       --no-iri                  turn off IRI support.
       --local-encoding=ENC      use ENC as the local encoding for IRIs.
       --remote-encoding=ENC     use ENC as the default remote encoding.
       --unlink                  remove file before clobber.

Directories:
  -nd, --no-directories           don't create directories.
  -x,  --force-directories        force creation of directories.
  -nH, --no-host-directories      don't create host directories.
       --protocol-directories     use protocol name in directories.
  -P,  --directory-prefix=PREFIX  save files to PREFIX/...
       --cut-dirs=NUMBER          ignore NUMBER remote directory components.

HTTP options:
       --http-user=USER        set http user to USER.
       --http-password=PASS    set http password to PASS.
       --no-cache              disallow server-cached data.
       --default-page=NAME     Change the default page name (normally
                               this is `index.html'.).
  -E,  --adjust-extension      save HTML/CSS documents with proper extensions.
       --ignore-length         ignore `Content-Length' header field.
       --header=STRING         insert STRING among the headers.
       --max-redirect          maximum redirections allowed per page.
       --proxy-user=USER       set USER as proxy username.
       --proxy-password=PASS   set PASS as proxy password.
       --referer=URL           include `Referer: URL' header in HTTP request.
       --save-headers          save the HTTP headers to file.
  -U,  --user-agent=AGENT      identify as AGENT instead of Wget/VERSION.
       --no-http-keep-alive    disable HTTP keep-alive (persistent connections).
       --no-cookies            don't use cookies.
       --load-cookies=FILE     load cookies from FILE before session.
       --save-cookies=FILE     save cookies to FILE after session.
       --keep-session-cookies  load and save session (non-permanent) cookies.
       --post-data=STRING      use the POST method; send STRING as the data.
       --post-file=FILE        use the POST method; send contents of FILE.
       --content-disposition   honor the Content-Disposition header when
                               choosing local file names (EXPERIMENTAL).
       --content-on-error      output the received content on server errors.
       --auth-no-challenge     send Basic HTTP authentication information
                               without first waiting for the server's
                               challenge.

HTTPS (SSL/TLS) options:
       --secure-protocol=PR     choose secure protocol, one of auto, SSLv2,
                                SSLv3, and TLSv1.
       --no-check-certificate   don't validate the server's certificate.
       --certificate=FILE       client certificate file.
       --certificate-type=TYPE  client certificate type, PEM or DER.
       --private-key=FILE       private key file.
       --private-key-type=TYPE  private key type, PEM or DER.
       --ca-certificate=FILE    file with the bundle of CA's.
       --ca-directory=DIR       directory where hash list of CA's is stored.
       --random-file=FILE       file with random data for seeding the SSL PRNG.
       --egd-file=FILE          file naming the EGD socket with random data.

FTP options:
       --ftp-user=USER         set ftp user to USER.
       --ftp-password=PASS     set ftp password to PASS.
       --no-remove-listing     don't remove `.listing' files.
       --no-glob               turn off FTP file name globbing.
       --no-passive-ftp        disable the "passive" transfer mode.
       --preserve-permissions  preserve remote file permissions.
       --retr-symlinks         when recursing, get linked-to files (not dir).

WARC options:
       --warc-file=FILENAME      save request/response data to a .warc.gz file.
       --warc-header=STRING      insert STRING into the warcinfo record.
       --warc-max-size=NUMBER    set maximum size of WARC files to NUMBER.
       --warc-cdx                write CDX index files.
       --warc-dedup=FILENAME     do not store records listed in this CDX file.
       --no-warc-compression     do not compress WARC files with GZIP.
       --no-warc-digests         do not calculate SHA1 digests.
       --no-warc-keep-log        do not store the log file in a WARC record.
       --warc-tempdir=DIRECTORY  location for temporary files created by the
                                 WARC writer.

Recursive download:
  -r,  --recursive          specify recursive download.
  -l,  --level=NUMBER       maximum recursion depth (inf or 0 for infinite).
       --delete-after       delete files locally after downloading them.
  -k,  --convert-links      make links in downloaded HTML or CSS point to
                            local files.
  -K,  --backup-converted   before converting file X, back up as X.orig.
  -m,  --mirror             shortcut for -N -r -l inf --no-remove-listing.
  -p,  --page-requisites    get all images, etc. needed to display HTML page.
       --strict-comments    turn on strict (SGML) handling of HTML comments.

Recursive accept/reject:
  -A,  --accept=LIST               comma-separated list of accepted extensions.
  -R,  --reject=LIST               comma-separated list of rejected extensions.
       --accept-regex=REGEX        regex matching accepted URLs.
       --reject-regex=REGEX        regex matching rejected URLs.
       --regex-type=TYPE           regex type (posix).
  -D,  --domains=LIST              comma-separated list of accepted domains.
       --exclude-domains=LIST      comma-separated list of rejected domains.
       --follow-ftp                follow FTP links from HTML documents.
       --follow-tags=LIST          comma-separated list of followed HTML tags.
       --ignore-tags=LIST          comma-separated list of ignored HTML tags.
  -H,  --span-hosts                go to foreign hosts when recursive.
  -L,  --relative                  follow relative links only.
  -I,  --include-directories=LIST  list of allowed directories.
  --trust-server-names             use the name specified by the redirection
                                   url last component.
  -X,  --exclude-directories=LIST  list of excluded directories.
  -np, --no-parent                 don't ascend to the parent directory.
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Configuring Octopress on Ubuntu]]></title>
    <link href="http://konradpodgorski.com/blog/2013/10/20/octopress-on-ubuntu/"/>
    <updated>2013-10-20T16:54:00+02:00</updated>
    <id>http://konradpodgorski.com/blog/2013/10/20/octopress-on-ubuntu</id>
    <content type="html"><![CDATA[<p>Guide was copied from <a href="http://stackoverflow.com/a/14353864/1562884">http://stackoverflow.com/a/14353864/1562884</a> for my reference</p>

<p>Helped me with this error during configuring Octopress on Ubuntu</p>

<pre><code>Error installing RedCloth:
ERROR: Failed to build gem native extension.
</code></pre>

<p>Guide below was written by <a href="http://stackoverflow.com/users/673057/eric-zhang">Eric Zhang</a></p>

<p>My Ubuntu 12.04 solution is install the ruby1.9.1-full version, that can resolve this issue.</p>

<pre><code>$sudo apt-get install ruby1.9.1-full
</code></pre>

<p>you can execute command:</p>

<pre><code>$sudo update-alternatives --config ruby
</code></pre>

<p>to select the alternative ruby which you have installed. and then, execute below commands to finish the octopress deploy:</p>

<pre><code>$git clone https://github.com/erizhang/octopress.git octopress
$cd octopress/
$sudo gem install bundler
$sudo gem install RedCloth -v '4.2.9'
$bundle install
$rake install
</code></pre>

<p>below commands you can find from octopress deploy guideline page:</p>

<pre><code>$rake setup_github_pages
$sudo rake setup_github_pages
$sudo rake generate
$sudo rake deploy
</code></pre>

<p>Hope it&rsquo;s helpful for you, thanks</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to implement a secure choice form field with Symfony]]></title>
    <link href="http://konradpodgorski.com/blog/2013/10/19/how-to-implement-a-secure-choice-form-field-with-symfony/"/>
    <updated>2013-10-19T19:17:00+02:00</updated>
    <id>http://konradpodgorski.com/blog/2013/10/19/how-to-implement-a-secure-choice-form-field-with-symfony</id>
    <content type="html"><![CDATA[<p>Create Util class for your entity, in my case entity is called &lsquo;Brand&rsquo;</p>

<p><strong>src/KP/Brand/MainBundle/Util/BrandUtil.php</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&lt;?</span><span class="nx">php</span>
</span><span class='line'>
</span><span class='line'><span class="k">namespace</span> <span class="nx">KP\Brand\MainBundle\Util</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">use</span> <span class="nx">KP\Brand\MainBundle\Entity\Brand</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">BrandUtil</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="sd">/**</span>
</span><span class='line'><span class="sd">     * @param bool $withLabels</span>
</span><span class='line'><span class="sd">     *</span>
</span><span class='line'><span class="sd">     * @return array</span>
</span><span class='line'><span class="sd">     */</span>
</span><span class='line'>    <span class="k">public</span> <span class="k">static</span> <span class="k">function</span> <span class="nf">getAvailableLanguageCodes</span><span class="p">(</span><span class="nv">$withLabels</span> <span class="o">=</span> <span class="k">false</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="nv">$choices</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span>
</span><span class='line'>            <span class="s1">&#39;pl&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;Polish&#39;</span><span class="p">,</span>
</span><span class='line'>            <span class="s1">&#39;en&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;English&#39;</span>
</span><span class='line'>        <span class="p">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="nv">$withLabels</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">return</span> <span class="nv">$choices</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">return</span> <span class="nb">array_keys</span><span class="p">(</span><span class="nv">$choices</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Create standard form type for your entity (I skipped required getName and setDefaultOptions methods here)</p>

<p><strong>src/KP/Brand/MainBundle/Form/BrandType.php</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&lt;?</span><span class="nx">php</span>
</span><span class='line'>
</span><span class='line'><span class="k">namespace</span> <span class="nx">KP\Brand\MainBundle\Form</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">use</span> <span class="nx">KP\Brand\MainBundle\Util\BrandUtil</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="nx">Symfony\Component\Form\AbstractType</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="nx">Symfony\Component\Form\FormBuilderInterface</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="nx">Symfony\Component\OptionsResolver\OptionsResolverInterface</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">BrandType</span> <span class="k">extends</span> <span class="nx">AbstractType</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="sd">/**</span>
</span><span class='line'><span class="sd">     * @param FormBuilderInterface $builder</span>
</span><span class='line'><span class="sd">     * @param array $options</span>
</span><span class='line'><span class="sd">     */</span>
</span><span class='line'>    <span class="k">public</span> <span class="k">function</span> <span class="nf">buildForm</span><span class="p">(</span><span class="nx">FormBuilderInterface</span> <span class="nv">$builder</span><span class="p">,</span> <span class="k">array</span> <span class="nv">$options</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="nv">$builder</span>
</span><span class='line'>            <span class="o">-&gt;</span><span class="na">add</span><span class="p">(</span><span class="s1">&#39;name&#39;</span><span class="p">)</span>
</span><span class='line'>            <span class="o">-&gt;</span><span class="na">add</span><span class="p">(</span>
</span><span class='line'>                <span class="s1">&#39;languageCode&#39;</span><span class="p">,</span>
</span><span class='line'>                <span class="s1">&#39;choice&#39;</span><span class="p">,</span>
</span><span class='line'>                <span class="k">array</span><span class="p">(</span>
</span><span class='line'>                    <span class="s1">&#39;label&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;Language&#39;</span><span class="p">,</span>
</span><span class='line'>                    <span class="s1">&#39;choices&#39;</span> <span class="o">=&gt;</span> <span class="nx">BrandUtil</span><span class="o">::</span><span class="na">getAvailableLanguageCodes</span><span class="p">(</span><span class="k">true</span><span class="p">),</span>
</span><span class='line'>                <span class="p">)</span>
</span><span class='line'>            <span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>src/KP/Brand/MainBundle/Resource/config/validation.yml</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="nx">KP\Brand\MainBundle\Entity\Brand</span><span class="o">:</span>
</span><span class='line'><span class="nx">properties</span><span class="o">:</span>
</span><span class='line'>    <span class="nx">languageCode</span><span class="o">:</span>
</span><span class='line'>        <span class="o">-</span> <span class="nx">Choice</span><span class="o">:</span> <span class="p">{</span> <span class="nx">callback</span><span class="o">:</span> <span class="p">[</span><span class="nx">KP\Brand\MainBundle\Util\BrandUtil</span><span class="p">,</span> <span class="nx">getAvailableLanguageCodes</span><span class="p">]</span> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to handle Angular JS api errors using response interceptors]]></title>
    <link href="http://konradpodgorski.com/blog/2013/10/08/handle-angular-js-api-errors-using-response-interceptors/"/>
    <updated>2013-10-08T00:00:00+02:00</updated>
    <id>http://konradpodgorski.com/blog/2013/10/08/handle-angular-js-api-errors-using-response-interceptors</id>
    <content type="html"><![CDATA[<p><a href="http://blog.brunoscopelliti.com/http-response-interceptors">http://blog.brunoscopelliti.com/http-response-interceptors</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Python 2.7 on Centos]]></title>
    <link href="http://konradpodgorski.com/blog/2013/09/25/python-2-7-on-centos/"/>
    <updated>2013-09-25T00:00:00+02:00</updated>
    <id>http://konradpodgorski.com/blog/2013/09/25/python-2-7-on-centos</id>
    <content type="html"><![CDATA[<p><a href="http://toomuchdata.com/2012/06/25/how-to-install-python-2-7-3-on-centos-6-2/">http://toomuchdata.com/2012/06/25/how-to-install-python-2-7-3-on-centos-6-2/</a></p>

<p>Thanks Daniel for this guide</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[WTF of the day :D]]></title>
    <link href="http://konradpodgorski.com/blog/2013/09/01/wtf-of-the-day-d/"/>
    <updated>2013-09-01T00:00:00+02:00</updated>
    <id>http://konradpodgorski.com/blog/2013/09/01/wtf-of-the-day-d</id>
    <content type="html"><![CDATA[<p>Why bother to use forms when you can use routing!</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">backend_new_user</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">pattern</span><span class="p-Indicator">:</span>        <span class="l-Scalar-Plain">/admin/new-user/{username}/{password}/{email}</span>
</span></code></pre></td></tr></table></div></figure>


<p>* of course this is not my code.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Monitor your website with Status Monitor]]></title>
    <link href="http://konradpodgorski.com/blog/2013/08/30/monitor-your-website-with-status-monitor/"/>
    <updated>2013-08-30T00:00:00+02:00</updated>
    <id>http://konradpodgorski.com/blog/2013/08/30/monitor-your-website-with-status-monitor</id>
    <content type="html"><![CDATA[<p>Recently I launched a simple tool to help me and my colleagues monitor websites we developed.</p>

<p>Its really simple and it will stay this way. You can use it for free.</p>

<p><a href="http://status.konradpodgorski.com/">http://status.konradpodgorski.com/</a></p>

<p>If you like it leave a comment, or even better spread a word around you. Any help promoting tool is welcome!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Enabling autocomplete for PHPUnit in PHP Storm]]></title>
    <link href="http://konradpodgorski.com/blog/2013/08/26/enabling-autocomplete-for-phpunit-in-php-storm/"/>
    <updated>2013-08-26T00:00:00+02:00</updated>
    <id>http://konradpodgorski.com/blog/2013/08/26/enabling-autocomplete-for-phpunit-in-php-storm</id>
    <content type="html"><![CDATA[<p>To enable autocomplete in tests add to project External Libraries following path (assuming you used pear channel to install phpunit)</p>

<pre><code>/usr/share/php/PHPUnit
</code></pre>

<p>Now autocomplete should work in all classes that extends \PHPUnit_Framework_TestCase</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Dropbox for storing backups? This is not what you think]]></title>
    <link href="http://konradpodgorski.com/blog/2013/08/24/dropbox-for-storing-backups-this-is-not-what-you-think/"/>
    <updated>2013-08-24T00:00:00+02:00</updated>
    <id>http://konradpodgorski.com/blog/2013/08/24/dropbox-for-storing-backups-this-is-not-what-you-think</id>
    <content type="html"><![CDATA[<p>Today I thought that maybe I should upgrade my dropbox account to pro. I don’t really need these 100GB but versioning files would be nice. Especially for keeping KeePass database. Last thing I would want is to lose that.</p>

<p>So I started reading terms of service and found interesting paragraph there.</p>

<blockquote><p>You, and not Dropbox, are responsible for maintaining and protecting all of your stuff. Dropbox will not be liable for any loss or corruption of your stuff, or for any costs or expenses associated with backing up or restoring any of your stuff.</p></blockquote>

<p><a href="https://www.dropbox.com/pricing_terms#terms">https://www.dropbox.com/pricing_terms#terms</a></p>

<p>Cool, so I COULD store my backups there but if something happen it’s MY not their problem, because I could backup my files (right?) :) Where? Maybe on S3? Nope, their TOS probably covers same topic in same way. Funny world, right?</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to write better PHP code]]></title>
    <link href="http://konradpodgorski.com/blog/2013/06/05/how-to-write-better-php-code/"/>
    <updated>2013-06-05T00:00:00+02:00</updated>
    <id>http://konradpodgorski.com/blog/2013/06/05/how-to-write-better-php-code</id>
    <content type="html"><![CDATA[<p>Simple answer: use automated code inspectors with ruleset (coding standard) that is official for framework you currently use.</p>

<h3>Installing Code Sniffer for PHP</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo pear install PHP_CodeSniffer</span></code></pre></td></tr></table></div></figure>


<p>DO NOT use version from other package managers because its seriously outdated at the moment and won’t work with most of IDE’s</p>

<h3>Configure IDE</h3>

<p>Personally I use PHP Storm, if you use other IDE unfortunately you’re on your own</p>

<p><em>File &ndash;> Default Settings &ndash;> PHP &ndash;> Code Sniffer</em></p>

<p><img src="http://konradpodgorski.com/wp-content/uploads/2013/06/php-code-sniffer-configuration.png" title="php-code-sniffer-configuration" ></p>

<h3>Enable in project</h3>

<p>This step has to be repeated in each project, however if you for example develop only Symfony 2 applications you can set it to enabled by default in Default Settings, from this moment each project created will have this validation enabled by default.</p>

<p><em>File &ndash;> Settings &ndash;> Inspections &ndash;> PHP &ndash;> PHP Code Sniffer validation</em></p>

<p><img src="http://konradpodgorski.com/wp-content/uploads/2013/06/php-code-sniffer-validation.png" title="php-code-sniffer-validation" ></p>

<p>In Coding standard select ruleset you want to use</p>

<h3>Ruleset for PSR-2</h3>

<p><a href="https://github.com/squizlabs/PHP_CodeSniffer/blob/master/CodeSniffer/Standards/PSR2/ruleset.xml">https://github.com/squizlabs/PHP_CodeSniffer/blob/master/CodeSniffer/Standards/PSR2/ruleset.xml</a></p>

<h3>Ruleset for Symfony 2</h3>

<p><a href="https://github.com/opensky/Symfony2-coding-standard">https://github.com/opensky/Symfony2-coding-standard</a>
If you encounter any problem with this how to please leave a comment so I can improve it. If this post helped you let me know, it’s always nice to know that I could help someone :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Nowe zastosowanie radio buttona według programistów home.pl]]></title>
    <link href="http://konradpodgorski.com/blog/2013/04/22/nowe-zastosowanie-radio-buttona-wedlug-programistow-home-pl/"/>
    <updated>2013-04-22T00:00:00+02:00</updated>
    <id>http://konradpodgorski.com/blog/2013/04/22/nowe-zastosowanie-radio-buttona-wedlug-programistow-home-pl</id>
    <content type="html"><![CDATA[<p>Jeden z klientów poprosił mnie o utworzenie dla niego osobnego konta ftp w ramach usługi hostingu na home.pl</p>

<p>Proste? Nie w home.pl</p>

<p>Programiści home.pl chyba nie wiedzą czym różni się radio button od checkbox buttona. Nie ma to jak wolność wyboru. Jeżeli zaznaczymy tę opcję to jedyną opcją jej odznaczenia jest wyjście z formularza lub zabawa firebugiem/web inspectorem.</p>

<p><img src="http://konradpodgorski.com/wp-content/uploads/2013/04/Panel-home.pl_.png" title="Panel home.pl" ></p>

<p>Ale zaraz! dodatkowo jest to wymagane pole. Bardzo ciekawe</p>

<p><img src="http://konradpodgorski.com/wp-content/uploads/2013/04/Panel-home.pl2_.png" title="Panel home.pl2" ></p>

<p>No ale dobrze, gdy już w ramach testu zgodziłem się udostępnić kontu FTP dostęp do całej zawartości serwisu WWW (cokolwiek to znaczy, chyba powinno być serwera?).</p>

<p>Próbujemy się zalogować wykorzystując bezpieczne hasło wygenerowane przez panel home.pl zapisane bezpiecznie w lokalnym keyringu lub po prostu przeniesione metodą kopiuj wklej.</p>

<p>Efekt</p>

<p><strong>530 Login incorrect.</strong></p>

<p>Teraz pewnie liczą, że poświęcę swój czas (= pieniądze), żeby im to zgłosić, a jakiś “wykwalifikowany” Pan (lub Pani) z supportu będą mi tłumaczyć jak używać FTP, nie dzięki!</p>

<p>Jest tyle lepszych alternatyw dla hostingu, czemu home.pl jest taki popularny?</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Batch conversion SVG to PNG using ImageMagick]]></title>
    <link href="http://konradpodgorski.com/blog/2013/03/14/batch-conversion-svg-to-png-using-imagemagick/"/>
    <updated>2013-03-14T00:00:00+01:00</updated>
    <id>http://konradpodgorski.com/blog/2013/03/14/batch-conversion-svg-to-png-using-imagemagick</id>
    <content type="html"><![CDATA[<p>This post is for my personal reference I will improve it in future.</p>

<p>Create 2 folders in project web root:</p>

<p>images/svg
images/png</p>

<p>Navigate to images/svg and run</p>

<pre><code>for filename in `find . -regex ".*.svg"`; do `convert -background none $filename ../png/$filename.png` ; done
</code></pre>

<p>Now each file that used to be in a svg format has copy in images/png with suffix .png</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to avoid memory leaks in Symfony 2 Commands]]></title>
    <link href="http://konradpodgorski.com/blog/2013/01/18/how-to-avoid-memory-leaks-in-symfony-2-commands/"/>
    <updated>2013-01-18T00:00:00+01:00</updated>
    <id>http://konradpodgorski.com/blog/2013/01/18/how-to-avoid-memory-leaks-in-symfony-2-commands</id>
    <content type="html"><![CDATA[<p>My recent job was to write Symfony 2 command that copy and transform enormous amount of SQL data (~70GB) from one database to another doing a lot of queries and data transformation in mean time. I knew that this script will be running for days or even weeks.</p>

<p>I found out that when I run my newly created command for while it slowly consume more and more memory.</p>

<p>It’s always nice to have method like this for monitoring memory usage.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="k">function</span> <span class="nf">printMemoryUsage</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">output</span><span class="o">-&gt;</span><span class="na">writeln</span><span class="p">(</span><span class="nb">sprintf</span><span class="p">(</span><span class="s1">&#39;Memory usage (currently) %dKB/ (max) %dKB&#39;</span><span class="p">,</span> <span class="nx">round</span><span class="p">(</span><span class="nb">memory_get_usage</span><span class="p">(</span><span class="k">true</span><span class="p">)</span> <span class="o">/</span> <span class="mi">1024</span><span class="p">),</span> <span class="nb">memory_get_peak_usage</span><span class="p">(</span><span class="k">true</span><span class="p">)</span> <span class="o">/</span> <span class="mi">1024</span><span class="p">));</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Right after start command used around 30MB – not much since I have 8GB right now, normally I wouldn’t even bother to optimize it more.</p>

<p>But after a while it reached 40MB, 50MB and kept going, since Ubuntu by default have php memory limit in CLI set to -1 (unlimited) this script could consume whole RAM after couple of days.</p>

<p><img src="http://konradpodgorski.com/wp-content/uploads/2013/01/php-lazy-garbage-collector.png" title="php-lazy-garbage-collector" ></p>

<p>I thought that garbage collector which is enabled by default in PHP 5.3 would clear memory at some point but he doesn’t, setting memory limit to reasonable 32MB in this case by putting in code</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="nb">ini_set</span><span class="p">(</span><span class="s1">&#39;memory_limit&#39;</span><span class="p">,</span> <span class="s1">&#39;32M&#39;</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>Caused standard exhausted memory limit error, I asked myself why garbage collector didn’t clear unused objects that I could missed?</p>

<p>Ok, it’s not time to be lazy and relay on g. collector, I’ve spent some time adding unset() for every object that was created. That still didn’t help :(</p>

<p>After hours of debugging I’ve found 3 issues</p>

<p>1st issue, lazy Garbage Collector
If you use infinite loop like I did you should force GC to do it’s job by</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="nb">gc_collect_cycles</span><span class="p">();</span>
</span></code></pre></td></tr></table></div></figure>


<p>2nd, dirty Entity Manager
use clear() method once a while, it detaches doctrine objects that are not used any more.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">em</span><span class="o">-&gt;</span><span class="na">flush</span><span class="p">();</span>
</span><span class='line'><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">em</span><span class="o">-&gt;</span><span class="na">clear</span><span class="p">();</span>
</span></code></pre></td></tr></table></div></figure>


<p>3rd issue, SQL Logger, this one was the worst to find
Every time you query database SQL Logger stores information about that, normally it’s not a problem but in infinite running commands every kB counts.</p>

<p>You can turn it off like this.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">em</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">getContainer</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">(</span><span class="s1">&#39;doctrine&#39;</span><span class="p">)</span>
</span><span class='line'>                <span class="o">-&gt;</span><span class="na">getEntityManager</span><span class="p">();</span>
</span><span class='line'><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">em</span><span class="o">-&gt;</span><span class="na">getConnection</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">getConfiguration</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">setSQLLogger</span><span class="p">(</span><span class="k">null</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>If this post helped you let me know by leaving a comment, it’s always nice to know that I could help someone :)</strong></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Composer – Symfony Backdoor? Could not load package ztec/security-active_directory]]></title>
    <link href="http://konradpodgorski.com/blog/2012/12/27/composer-symfony-backdoor-could-not-load-package-ztec-slash-security-active-directory/"/>
    <updated>2012-12-27T00:00:00+01:00</updated>
    <id>http://konradpodgorski.com/blog/2012/12/27/composer-symfony-backdoor-could-not-load-package-ztec-slash-security-active-directory</id>
    <content type="html"><![CDATA[<p>Today during routine production server update using capifony I got error like this</p>

<pre><code>[RuntimeException]
  Could not load package ztec/security-active_directory in http://packagist.org: [UnexpectedValueException] Could not parse version constraint v4.0-stable

  [UnexpectedValueException]
  Could not parse version constraint v4.0-stable
Thing is we never used bundle ztec/security-active_directory and CTRL + F on project shows 0 results for this string.
</code></pre>

<p>Does anyone know why composer tries to install ztec/security-active_directory during php composer.phar install?</p>

<p><strong>If you get here by Google please post your thoughts about this in comment, then maybe you could help me solve this issue by providing more information</strong></p>

<p>If you want to use this bundle and get error from above it’s caused by dependency <a href="https://packagist.org/packages/adldap/adldap">https://packagist.org/packages/adldap/adldap</a> and disapered after running php composer.phar self-update</p>

<p>Update #1</p>

<p>Found commit that is cause of this error, but still we don’t have a clue why this bundle is loaded into our project :/</p>

<p><a href="https://github.com/ztec/ZtecSecurityActiveDirectoryBundle/commit/19d2a5569e6585d498b379e21189ee307299b7ac#commitcomment-2318994">https://github.com/ztec/ZtecSecurityActiveDirectoryBundle/commit/19d2a5569e6585d498b379e21189ee307299b7ac#commitcomment-2318994</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[php.ini used by Direct Admin panel]]></title>
    <link href="http://konradpodgorski.com/blog/2012/11/26/php-ini-used-by-direct-admin-panel/"/>
    <updated>2012-11-26T00:00:00+01:00</updated>
    <id>http://konradpodgorski.com/blog/2012/11/26/php-ini-used-by-direct-admin-panel</id>
    <content type="html"><![CDATA[<p>Not so obvious location for php.in file that is used by Direct Admin</p>

<pre><code>/usr/local/etc/php5/cgi/php.ini
</code></pre>

<p>Source:</p>

<p><a href="http://help.directadmin.com/item.php?id=301">http://help.directadmin.com/item.php?id=301</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Postgresql 9.1 on Debian 6.0]]></title>
    <link href="http://konradpodgorski.com/blog/2012/11/15/postgresql-9-1-on-debian-6-0/"/>
    <updated>2012-11-15T00:00:00+01:00</updated>
    <id>http://konradpodgorski.com/blog/2012/11/15/postgresql-9-1-on-debian-6-0</id>
    <content type="html"><![CDATA[<p><a href="http://serverfault.com/questions/413211/cannot-install-postgres-9-1-on-a-fresh-debian-6-0">http://serverfault.com/questions/413211/cannot-install-postgres-9-1-on-a-fresh-debian-6-0</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Capifony fix for deployment on servers with strict permission settings]]></title>
    <link href="http://konradpodgorski.com/blog/2012/07/26/capifony-fix-for-deployment-on-servers-with-strict-permission-settings/"/>
    <updated>2012-07-26T00:00:00+02:00</updated>
    <id>http://konradpodgorski.com/blog/2012/07/26/capifony-fix-for-deployment-on-servers-with-strict-permission-settings</id>
    <content type="html"><![CDATA[<p>Some servers (for instance VPS I use) doesn’t allow to run script if it’s group writeable.</p>

<p>Solution is to run chmod 644 on files and chmod 755 on directories inside current release. You could use this one liner: Setting permissions for files and directories</p>

<p>BUT it’s really pain in ass to do every deploy, not to mention few more seconds of downtime. To fix this add to your deploy.rb following lines</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># Fix persmissions on VPS</span>
</span><span class='line'><span class="n">after</span> <span class="s2">&quot;deploy:update_code&quot;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">capifony_pretty_print</span> <span class="s2">&quot;--&gt; Fixing permissions&quot;</span>
</span><span class='line'>  <span class="n">run</span> <span class="s2">&quot;cd </span><span class="si">#{</span><span class="n">latest_release</span><span class="si">}</span><span class="s2"> &amp;&amp; find . -type f -exec chmod 644 {} </span><span class="se">\\</span><span class="s2">;&quot;</span>
</span><span class='line'>  <span class="n">run</span> <span class="s2">&quot;cd </span><span class="si">#{</span><span class="n">latest_release</span><span class="si">}</span><span class="s2"> &amp;&amp; find . -type d -exec chmod 755 {} </span><span class="se">\\</span><span class="s2">;&quot;</span>
</span><span class='line'>  <span class="n">capifony_puts_ok</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>This is sample deploy.rb file with above fix, don’t use it without thinking :&ndash;)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># deploy.rb</span>
</span><span class='line'>
</span><span class='line'><span class="n">set</span>   <span class="ss">:application</span><span class="p">,</span>   <span class="s2">&quot;My App&quot;</span>
</span><span class='line'><span class="n">set</span>   <span class="ss">:deploy_to</span><span class="p">,</span>     <span class="s2">&quot;/var/www/my-app.com&quot;</span>
</span><span class='line'><span class="n">set</span>   <span class="ss">:domain</span><span class="p">,</span>        <span class="s2">&quot;my-app.com&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">set</span>   <span class="ss">:scm</span><span class="p">,</span>           <span class="ss">:git</span>
</span><span class='line'><span class="n">set</span>   <span class="ss">:repository</span><span class="p">,</span>    <span class="s2">&quot;ssh-gitrepo-domain.com:/path/to/repo.git&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">role</span>  <span class="ss">:web</span><span class="p">,</span>           <span class="n">domain</span>
</span><span class='line'><span class="n">role</span>  <span class="ss">:app</span><span class="p">,</span>           <span class="n">domain</span>
</span><span class='line'><span class="n">role</span>  <span class="ss">:db</span><span class="p">,</span>            <span class="n">domain</span><span class="p">,</span> <span class="ss">:primary</span> <span class="o">=&gt;</span> <span class="kp">true</span>
</span><span class='line'>
</span><span class='line'><span class="n">set</span>   <span class="ss">:use_sudo</span><span class="p">,</span>      <span class="kp">false</span>
</span><span class='line'><span class="n">set</span>   <span class="ss">:keep_releases</span><span class="p">,</span> <span class="mi">3</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Fix persmissions on VPS</span>
</span><span class='line'><span class="n">after</span> <span class="s2">&quot;deploy:update_code&quot;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">capifony_pretty_print</span> <span class="s2">&quot;--&gt; Fixing permissions&quot;</span>
</span><span class='line'>  <span class="n">run</span> <span class="s2">&quot;cd </span><span class="si">#{</span><span class="n">latest_release</span><span class="si">}</span><span class="s2"> &amp;&amp; find . -type f -exec chmod 644 {} </span><span class="se">\\</span><span class="s2">;&quot;</span>
</span><span class='line'>  <span class="n">run</span> <span class="s2">&quot;cd </span><span class="si">#{</span><span class="n">latest_release</span><span class="si">}</span><span class="s2"> &amp;&amp; find . -type d -exec chmod 755 {} </span><span class="se">\\</span><span class="s2">;&quot;</span>
</span><span class='line'>  <span class="n">capifony_puts_ok</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setting permissions for files and directories]]></title>
    <link href="http://konradpodgorski.com/blog/2012/07/13/setting-permissions-for-files-and-directories/"/>
    <updated>2012-07-13T00:00:00+02:00</updated>
    <id>http://konradpodgorski.com/blog/2012/07/13/setting-permissions-for-files-and-directories</id>
    <content type="html"><![CDATA[<p>Recursively sets permission 644 to all files, and 755 to all directories within current location.</p>

<p>One liner for my reference :)</p>

<pre><code>find . -type f -exec chmod 644 {} \;; find . -type d -exec chmod 755 {} \;
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Removing strong password policy in Windows 2008]]></title>
    <link href="http://konradpodgorski.com/blog/2012/04/09/removing-strong-password-policy-in-windows-2008/"/>
    <updated>2012-04-09T00:00:00+02:00</updated>
    <id>http://konradpodgorski.com/blog/2012/04/09/removing-strong-password-policy-in-windows-2008</id>
    <content type="html"><![CDATA[<p>You can use gpedit.msc to change the password policy, also you can change the domain policy if you are a member of a domain to change it that way as well.</p>

<p>You can run gpedit.msc by doing the following.</p>

<ol>
<li><p>click on the start menu, click run, type in gpedit.msc then press Enter.</p></li>
<li><p>Locate the “Local Computer policy / Computer Configuration / Windows Settings / Security settings / Password Policy</p></li>
<li><p>Change the keys you wish to change according to your existing password policies in your work place.</p></li>
</ol>


<p>source: <a href="http://www.experts-exchange.com/Microsoft/Development/MS-SQL-Server/SQL-Server-2005/Q_23612846.html">http://www.experts-exchange.com/Microsoft/Development/MS-SQL-Server/SQL-Server-2005/Q_23612846.html</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[How to] Symfony 2, Please install the ‘intl’ extension for full localization capabilities]]></title>
    <link href="http://konradpodgorski.com/blog/2011/12/29/how-to-symfony-2-please-install-the-intl-extension-for-full-localization-capabilities/"/>
    <updated>2011-12-29T00:00:00+01:00</updated>
    <id>http://konradpodgorski.com/blog/2011/12/29/how-to-symfony-2-please-install-the-intl-extension-for-full-localization-capabilities</id>
    <content type="html"><![CDATA[<p>Full error message</p>

<pre><code>The Symfony\Component\Locale\Stub\StubNumberFormatter::parse() method’s argument $type value 2 behavior is not implemented. Please install the ‘intl’ extension for full localization capabilities.
</code></pre>

<p>To fix this install php5-intl extension</p>

<h3>Ubuntu</h3>

<pre><code>sudo apt-get install php5-intl
</code></pre>

<h3>Fedora/Cent OS</h3>

<pre><code>sudo yum install php-intl
</code></pre>

<p>Don’t forget to restart apache2</p>

<pre><code>sudo service apache2 restart
</code></pre>

<p>or</p>

<pre><code>sudo service httpd restart
</code></pre>

<p>Let me know if it was helpful</p>
]]></content>
  </entry>
  
</feed>
